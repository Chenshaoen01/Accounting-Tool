@{
    ViewData["Title"] = " - 註冊帳號";
    Layout = "~/Views/Shared/_LayoutAccoutPage.cshtml";
}

<div id="app" class="text-center">
    <div class="container max-width-500">
        <h2 class="fw-bold">註冊帳號</h2>
        <div>
            @* 信箱(帳號) *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                信箱(帳號)
                <input type="text" class="form-control bg-transparent border-dark fw-bold" v-model="form.email.value">
            </label>
            @* 密碼 *@
            <label class="form-label w-100 d-flex flex-column align-items-start position-relative">
                密碼
                <input type="text" class="form-control bg-transparent border-dark fw-bold" v-model="form.password.value" v-if="showPassword">
                <input type="password" class="form-control bg-transparent border-dark fw-bold" v-model="form.password.value" v-else>
                <i class="bi bi-eye-slash-fill password-toggle-button" v-on:click="passwordShowToggle" v-if="showPassword"></i>
                <i class="bi bi bi-eye-fill password-toggle-button" v-on:click="passwordShowToggle" v-else></i>
            </label>
            @* 確認密碼 *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                確認密碼
                <input type="password" class="form-control bg-transparent border-dark fw-bold" v-model="passwordConfirm">
            </label>

            @* 送出按鈕 *@
            <div class="text-center">
                <button type="button" class="btn btn-dark" v-on:click="createAccountSubmit">送出</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        const app = Vue.createApp({
            mixins: [VueMxin],
            data() {
                return {
                    form: {
                        email: { value: null, columnName: "信箱(帳號)", validateTypes: ["required", "email"] },
                        password: { value: null, columnName: "密碼", validateTypes: ["required"] }
                    },
                    passwordConfirm: null,
                    showPassword: false
                }
            }
            , created() {
            }
            , methods: {
                // 切換密碼隱藏/顯示
                passwordShowToggle() {
                    this.showPassword = !this.showPassword;
                },
                createAccountSubmit() {
                    // 進行表單驗證
                    const ValidateResult = this.validate(this.form);
                    if (ValidateResult.length > 0) {
                        this.modalShow("項目填寫不完全或格式錯誤", ValidateResult, "error");
                    } else { 
                        // 檢查密碼是否相符
                        if (this.form.password.value === this.passwordConfirm) {
                            const url = window.location.origin + "/api/Users/CreateAccount"
                            const data = this.getAxiosData(this.form);
                            axios.post(url, data)
                                .then(() => {
                                    this.modalShow("帳號建立成功", "即將進入登入頁面", "succcess");

                                    setTimeout(() => {
                                        window.location = window.location.origin + "/AccountingData/AccountPage/Login";
                                    }, "2000")
                                })
                                .catch((err) => {
                                    this.modalShow(err.response.data, null, "error");
                                })
                        } else {
                            this.modalShow("密碼 與 確認密碼 不相符", null, "error");
                        }
                    }
                }
            }
        });
        const vm = app.mount('#app');
    </script>
}

