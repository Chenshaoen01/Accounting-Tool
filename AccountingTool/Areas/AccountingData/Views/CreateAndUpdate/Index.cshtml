@{
    ViewData["Title"] = "新增/編輯資料";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="app" class="text-center">
    <div class="container max-width-500">
        @* 新增/編輯區域 *@
        <div>
            @* 種類 *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                種類
                <select class="form-select" v-model="form.label">
                    <option selected>Open this select menu</option>
                    <option value="1">One</option>
                    <option value="2">Two</option>
                    <option value="3">Three</option>
                </select>
            </label>
            @* 日期 *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                日期
                <input type="date" class="form-control" v-model="form.time" />
            </label>
            @* 備註 *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                描述
                <input type="text" class="form-control" v-model="form.description">
            </label>
            @* 金額 *@
            <label class="form-label w-100 d-flex flex-column align-items-start">
                金額
                <input type="number" class="form-control" v-model="form.price">
            </label>

            @* 計算機 *@
            <div class="border rounded p-3 mb-3">
                <input type="text" class="form-control" v-model="calculator.processDescription">
                <div class="container mt-3">
                    <div class="row">
                        @* 數字區域 *@
                        <div class="col-8 container mt-3">
                            <div class="row gy-3 border-end">
                                <div class="col-4 d-flex justify-content-center" v-for="item in calculator.numberList" :key="item">
                                    <button type="button" class="d-flex align-items-center justify-content-center border border-dark bg-white calculatorButton"
                                            v-on:click="calculatorButtonFunction(item.value)">
                                        <span class="fs-3" v-if="item.type ==='icon'"><i :class="item.buttonContent"></i></span>
                                        <span class="fs-3" v-else>{{item.buttonContent}}</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                        @* 功能按鈕區域 *@
                        <div class="col-4 container mt-3">
                            <div class="row gy-3">
                                <div class="col-6 d-flex justify-content-center" v-for="item in calculator.buttonList" :key="item">
                                    <button type="button" class="d-flex align-items-center justify-content-center border border-dark bg-white calculatorButton"
                                            v-on:click="calculatorButtonFunction(item.value)">
                                        <span class="fs-3" v-if="item.type ==='icon'"><i :class="item.buttonContent"></i></span>
                                        <span class="fs-3" v-else>{{item.buttonContent}}</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @* 送出按鈕 *@
            <div class="text-center">
                <button type="button" class="btn btn-dark" v-on:click="submit">送出</button>
            </div>

        </div>
    </div>
</div>
@section scripts{
    <script>
        const app = Vue.createApp({
            mixins: [VueMxin, calculatorMixin],
            data() {
                return {
                    mode: null,
                    form: {
                        Id: null, category: "expense", label: null, time: null, description: null, price: null
                    },
                }
            }
            , created() {
                // 取得token
                this.getToken();

                // 設定模式
                this.mode = "Create"
                if ("@ViewBag.Id") {
                    this.mode = "Edit";
                }

                if ("@ViewBag.Id") {
                    // 設定資料Id
                    this.form.Id = "@ViewBag.Id";
                    // 依Id取得資料
                    this.getDataById();
                }
            }
            , methods: {
                getToken() {
                    const value = `; ${document.cookie}`;
                    const parts = value.split("; accountingToolToken=");
                    if (parts.length === 2) {
                        this.token = parts.pop().split(';').shift();
                    }
                },
                getDataById() {
                    const url = window.location.origin+"/api/AccountingTool/getData/" + this.form.Id;
                    axios({
                        url: url,
                        method: "GET",
                        headers: {
                            Authorization: `Bearer ${this.getToken()}`
                        }
                    }).then((res) => {
                        this.form = res.data[0]
                        // 編輯日期格式
                        this.form.time = this.dateTrnsfer(res.data[0].time)
                    })
                },
                submit() {
                    let action = "POST";
                    if (this.mode === "Edit") {
                        action = "PUT";
                    }

                    const url = window.location.origin + "/api/AccountingTool"
                    axios({
                        url: url,
                        method: action,
                        data: this.form,
                        headers: {
                            Authorization: `Bearer ${this.getToken()}`
                        }
                    }).then((res) => {
                        if (this.mode === "Create") {
                            alert("成功建立資料");
                        }else{
                            alert("成功更新資料");
                        }
                    })
                }
            }
        });
        const vm = app.mount('#app');
    </script>
}



