@{
    ViewData["Title"] = "Home Page";
}

<div id="app" class="text-center">
    <div class="btn-group btn-group-lg mb-5" role="group" aria-label="Basic example">
        <button type="button" class="btn btn-dark shadow-none">支出</button>
        <button type="button" class="btn shadow-none btn-dark">收入</button>
        <button type="button" class="btn shadow-none btn-dark">盈餘</button>
    </div>
    
    <div class="container max-width-500">
        @* 圖表區域 *@
        <canvas id="myChart" class="mb-3"></canvas>
        @* 資料細項 *@
        <div class="mb-3">
            <div class="accordion mb-3" :id="collapseOne" v-for="(item, index) in dataList">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button bg-dark text-white" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapseOne" :aria-controls="collapseOne">
                            {{item.label}}
                        </button>
                    </h2>
                    <div :id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                        <div class="accordion-body text-start">
                            <div class="border-bottom py-2">類別：{{item.label}}</div>
                            <div class="border-bottom py-2">時間：{{item.time}}</div>
                            <div class="border-bottom py-2">價格：{{item.price}}</div>
                            <div class="py-2">描述：{{item.description}}</div>
                            <div class="py-2 text-center">
                                <button type="button" class="btn btn-dark me-2" v-on:click="editPage(item.id)">編輯</button>
                                <button type="button" class="btn btn-dark">刪除</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* 新增按鈕 *@
        <button type="button" class="btn shadow-none" v-on:click="createPage">
            <i class="bi bi-plus-circle-fill fs-2"></i>
        </button>
    </div>
    

    
</div>
@section scripts{
    <script type="module">
        const ctx = document.getElementById('myChart');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    token: null,
                    category: "expense",
                    dataList: [],
                    chart: null,
                    chartContent: {
                        type: 'bar',
                        data: {
                            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                            datasets: [{
                                label: '# of Votes',
                                data: [12, 19, 3, 5, 2, 3],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },

                        }
                    }
                }
            }
            , created() {
                this.getToken();
                this.getDataList();
            }
            , mounted() {
                this.chart = this.newChart();
            }
            , methods: {
                getToken() {
                    const value = `; ${document.cookie}`;
                    const parts = value.split("; accountingToolToken=");
                    if (parts.length === 2) { 
                        this.token = parts.pop().split(';').shift();
                    }
                },
                getDataList() {
                    const url = "api/AccountingTool/getDataList/" + this.category
                    axios({
                        method: "GET",
                        url: url,
                        headers: {
                            Authorization: `Bearer ${this.token}`
                        }
                    })
                    .then((res) => {
                        this.dataList = res.data
                    })
                },
                newChart() {
                    const ctx = document.getElementById('myChart');
                    return new Chart(ctx, this.chartContent);
                },
                updateChart() {
                    this.chart.destroy();
                    this.chart = newChart();
                },
                createPage() {
                    window.location = window.location.origin + "/AccountingData/CreateAndUpdate/Create";
                },
                editPage(dataId) {
                    window.location = window.location.origin + "/AccountingData/CreateAndUpdate/Edit?Id=" + dataId;
                },
                deleteData() {
                    const url = "api/AccountingTool/getDataList/" + this.category
                }
            }
        });
        const vm = app.mount('#app');
    </script>
}

